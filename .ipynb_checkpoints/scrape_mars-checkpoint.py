{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from splinter import Browser\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def init_browser():\n",
    "    executable_path = {\"executable_path\": \"chromedriver.exe\"}\n",
    "    return Browser(\"chrome\", **executable_path, headless=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape():\n",
    "    \n",
    "#NASA Mars News\n",
    "    html = browser.html\n",
    "    soup = BeautifulSoup(html, 'html.parser')    \n",
    "    summary=soup.find('div', class_='list_text')\n",
    "\n",
    "    title=summary.find('div', class_='content_title')\n",
    "    title= title.text\n",
    "\n",
    "    paragraph=summary.find('div', class_='article_teaser_body')\n",
    "    paragraph= paragraph.text\n",
    "    mars_paragraph= paragraph.text   \n",
    "   \n",
    " #JPL Mars Space Images - Featured Image\n",
    "    url1='https://www.jpl.nasa.gov/spaceimages/?search=&category=Mars'\n",
    "    response1 = requests.get(url1)\n",
    "    soup1 = BeautifulSoup(response1.text, 'html.parser')\n",
    "    \n",
    "    image = soup1.find('article')\n",
    "    image1= image.footer.a\n",
    "    \n",
    "    img_jpl=image1['data-fancybox-href']       \n",
    "\n",
    "#Mars Weather\n",
    "    weather_tweet='InSight sol 611 (2020-08-15) low -93.8ºC (-136.9ºF) high -15.9ºC (3.4ºF) winds from the WNW at 7.3 m/s (16.3 mph) gusting to 17.9 m/s (40.2 mph) pressure at 7.90 hPa'\n",
    "        \n",
    "#Mars Facts\n",
    "    url3 = 'https://space-facts.com/mars/'\n",
    "    tables = pd.read_html(url3)\n",
    "    \n",
    "    df = tables[0]\n",
    "    df.columns = ['Attributes','']\n",
    "    df.set_index('Attributes')\n",
    "    html_table = df.to_html()\n",
    "    html_table.replace('\\n', '')\n",
    "    mars_table=df.to_html('table.html')\n",
    "    \n",
    "#Mars Hemispheres\n",
    "    url4=\"https://astrogeology.usgs.gov/search/map/Mars/Viking/cerberus_enhanced\"\n",
    "    response4 = requests.get(url4)\n",
    "    soup4=BeautifulSoup(response4.text, 'html.parser')\n",
    "    \n",
    "    download = soup4.find_all('div', class_='downloads')\n",
    "\n",
    "    for li in download:\n",
    "        mars_img1=li.a\n",
    "        mars_img1= mars_img1['href']\n",
    "    \n",
    "    title = soup4.find('h2', class_='title')\n",
    "    title1= title.text\n",
    "\n",
    "    url5=\"https://astrogeology.usgs.gov/search/map/Mars/Viking/schiaparelli_enhanced\"\n",
    "    response5 = requests.get(url5)\n",
    "    soup5=BeautifulSoup(response5.text, 'html.parser')\n",
    "    \n",
    "    download = soup5.find_all('div', class_='downloads')\n",
    "\n",
    "    title2 = soup5.find('h2', class_='title')\n",
    "    title2= title2.text    \n",
    "\n",
    "    for li in download:\n",
    "        mars_img2=li.a\n",
    "        mars_img2= mars_img2['href']\n",
    "  \n",
    "    url6=\"https://astrogeology.usgs.gov/search/map/Mars/Viking/syrtis_major_enhanced\"\n",
    "    response6 = requests.get(url6)\n",
    "    soup6=BeautifulSoup(response6.text, 'html.parser')\n",
    "    \n",
    "    download6 = soup6.find_all('div', class_='downloads')\n",
    "\n",
    "    title3 = soup6.find('h2', class_='title')\n",
    "    title3= title3.text\n",
    "\n",
    "\n",
    "    for li in download:\n",
    "        mars_img3=li.a\n",
    "        mars_img3= mars_img3['href']\n",
    "        \n",
    "    url7=\"https://astrogeology.usgs.gov/search/map/Mars/Viking/valles_marineris_enhanced\"\n",
    "    response7 = requests.get(url7)\n",
    "    soup7=BeautifulSoup(response7.text, 'html.parser')\n",
    "    \n",
    "    download7 = soup7.find_all('div', class_='downloads')\n",
    "\n",
    "    for li in download:\n",
    "        mars_img4=li.a\n",
    "        mars_img4= mars_img4['href']\n",
    "    \n",
    "    title4 = soup7.find('h2', class_='title')\n",
    "    title4= title4.text\n",
    "    \n",
    "    hemisphere_image_urls=[\n",
    "    {'Title':title1, 'img_url': mars_img1},\n",
    "    {'Title':title2, 'img_url': mars_img2},\n",
    "    {'Title': title3, 'img_url': mars_img3},\n",
    "    {'Title': title4, 'img-url': mars_img4}    \n",
    "    ]\n",
    "    \n",
    "    mars_data = {\"Title\":title, \"Featured Image\":img_jpl,\"Weather\":weather_tweet,\"Mars Facts\":mars_table, \"Hemispheres\":hemisphere_image_urls}\n",
    "\n",
    "    return mars_data\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
